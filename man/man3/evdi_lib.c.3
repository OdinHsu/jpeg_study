.TH "/home/odin/Desktop/program/usbdisp_linux/libusbdisp/deb_install/com.racertech.usbdisp-1.0.0/opt/apps/com.racertech.usbdisp/files/evdi/library/evdi_lib.c" 3 "2024年11月2日 星期六" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/odin/Desktop/program/usbdisp_linux/libusbdisp/deb_install/com.racertech.usbdisp-1.0.0/opt/apps/com.racertech.usbdisp/files/evdi/library/evdi_lib.c
.SH SYNOPSIS
.br
.PP
\fC#include <stddef\&.h>\fP
.br
\fC#include <stdint\&.h>\fP
.br
\fC#include <libdrm/drm\&.h>\fP
.br
\fC#include 'evdi_drm\&.h'\fP
.br
\fC#include 'evdi_lib\&.h'\fP
.br
\fC#include <assert\&.h>\fP
.br
\fC#include <dirent\&.h>\fP
.br
\fC#include <errno\&.h>\fP
.br
\fC#include <fcntl\&.h>\fP
.br
\fC#include <poll\&.h>\fP
.br
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <sys/ioctl\&.h>\fP
.br
\fC#include <sys/mman\&.h>\fP
.br
\fC#include <sys/stat\&.h>\fP
.br
\fC#include <sys/types\&.h>\fP
.br
\fC#include <unistd\&.h>\fP
.br

.SS "複合項目"

.in +1c
.ti -1c
.RI "struct \fBevdi_frame_buffer_node\fP"
.br
.ti -1c
.RI "struct \fBevdi_device_context\fP"
.br
.in -1c
.SS "定義"

.in +1c
.ti -1c
.RI "#define \fB__user\fP"
.br
.ti -1c
.RI "#define \fBMAX_DIRTS\fP   16"
.br
.ti -1c
.RI "#define \fBEVDI_INVALID_DEVICE_INDEX\fP   \-1"
.br
.ti -1c
.RI "#define \fBEVDI_MODULE_COMPATIBILITY_VERSION_MAJOR\fP   1"
.br
.ti -1c
.RI "#define \fBEVDI_MODULE_COMPATIBILITY_VERSION_MINOR\fP   9"
.br
.ti -1c
.RI "#define \fBEVDI_MODULE_COMPATIBILITY_VERSION_PATCH\fP   0"
.br
.ti -1c
.RI "#define \fBevdi_log\fP(\&.\&.\&.)"
.br
.ti -1c
.RI "#define \fBEVDI_USAGE_LEN\fP   64"
.br
.in -1c
.SS "函式"

.in +1c
.ti -1c
.RI "\fBevdi_handle\fP \fBevdi_open\fP (\fBint\fP device)"
.br
.ti -1c
.RI "enum \fBevdi_device_status\fP \fBevdi_check_device\fP (\fBint\fP device)"
.br
.ti -1c
.RI "\fBint\fP \fBevdi_add_device\fP (void)"
.br
.ti -1c
.RI "\fBevdi_handle\fP \fBevdi_open_attached_to\fP (const \fBchar\fP *sysfs_parent_device)"
.br
.ti -1c
.RI "void \fBevdi_close\fP (\fBevdi_handle\fP \fBhandle\fP)"
.br
.ti -1c
.RI "void \fBevdi_connect\fP (\fBevdi_handle\fP \fBhandle\fP, const unsigned \fBchar\fP *edid, const unsigned \fBint\fP edid_length, const uint32_t pixel_area_limit, const uint32_t pixel_per_second_limit)"
.br
.ti -1c
.RI "void \fBevdi_disconnect\fP (\fBevdi_handle\fP \fBhandle\fP)"
.br
.ti -1c
.RI "void \fBevdi_enable_cursor_events\fP (\fBevdi_handle\fP \fBhandle\fP, bool enable)"
.br
.ti -1c
.RI "void \fBevdi_grab_pixels\fP (\fBevdi_handle\fP \fBhandle\fP, struct \fBevdi_rect\fP *rects, \fBint\fP *num_rects)"
.br
.ti -1c
.RI "void \fBevdi_register_buffer\fP (\fBevdi_handle\fP \fBhandle\fP, struct \fBevdi_buffer\fP \fBbuffer\fP)"
.br
.ti -1c
.RI "void \fBevdi_unregister_buffer\fP (\fBevdi_handle\fP \fBhandle\fP, \fBint\fP bufferId)"
.br
.ti -1c
.RI "bool \fBevdi_request_update\fP (\fBevdi_handle\fP \fBhandle\fP, \fBint\fP bufferId)"
.br
.ti -1c
.RI "void \fBevdi_ddcci_response\fP (\fBevdi_handle\fP \fBhandle\fP, const unsigned \fBchar\fP *\fBbuffer\fP, const uint32_t buffer_length, const bool result)"
.br
.ti -1c
.RI "void \fBevdi_handle_events\fP (\fBevdi_handle\fP \fBhandle\fP, struct \fBevdi_event_context\fP *evtctx)"
.br
.ti -1c
.RI "\fBevdi_selectable\fP \fBevdi_get_event_ready\fP (\fBevdi_handle\fP \fBhandle\fP)"
.br
.ti -1c
.RI "void \fBevdi_get_lib_version\fP (struct \fBevdi_lib_version\fP *version)"
.br
.ti -1c
.RI "void \fBevdi_set_logging\fP (struct \fBevdi_logging\fP \fBevdi_logging\fP)"
.br
.in -1c
.SS "變數"

.in +1c
.ti -1c
.RI "struct \fBevdi_logging\fP \fBg_evdi_logging\fP"
.br
.in -1c
.SH "定義巨集說明文件"
.PP 
.SS "#define __user"

.PP
定義在 evdi_lib\&.c 檔案之第 8 行\&.
.SS "#define EVDI_INVALID_DEVICE_INDEX   \-1"

.PP
定義在 evdi_lib\&.c 檔案之第 29 行\&.
.SS "#define evdi_log( \&.\&.\&.)"
\fB巨集內容:\fP
.PP
.nf
  do {                        \
    if (g_evdi_logging\&.function) {                   \
        g_evdi_logging\&.function(g_evdi_logging\&.user_data, \
                    __VA_ARGS__);           \
    } else {                            \
        printf("[libevdi] " __VA_ARGS__);           \
        printf("\n");                       \
    }                               \
} while (0)
.fi
.PP
定義在 evdi_lib\&.c 檔案之第 35 行\&.
.SS "#define EVDI_MODULE_COMPATIBILITY_VERSION_MAJOR   1"

.PP
定義在 evdi_lib\&.c 檔案之第 31 行\&.
.SS "#define EVDI_MODULE_COMPATIBILITY_VERSION_MINOR   9"

.PP
定義在 evdi_lib\&.c 檔案之第 32 行\&.
.SS "#define EVDI_MODULE_COMPATIBILITY_VERSION_PATCH   0"

.PP
定義在 evdi_lib\&.c 檔案之第 33 行\&.
.SS "#define EVDI_USAGE_LEN   64"

.PP
定義在 evdi_lib\&.c 檔案之第 62 行\&.
.SS "#define MAX_DIRTS   16"

.PP
定義在 evdi_lib\&.c 檔案之第 28 行\&.
.SH "函式說明文件"
.PP 
.SS "\fBint\fP evdi_add_device (void)"

.PP
定義在 evdi_lib\&.c 檔案之第 637 行\&.
.SS "enum \fBevdi_device_status\fP evdi_check_device (\fBint\fP device)"

.PP
定義在 evdi_lib\&.c 檔案之第 575 行\&.
.SS "void evdi_close (\fBevdi_handle\fP handle)"

.PP
定義在 evdi_lib\&.c 檔案之第 661 行\&.
.SS "void evdi_connect (\fBevdi_handle\fP handle, const unsigned \fBchar\fP * edid, const unsigned \fBint\fP edid_length, const uint32_t pixel_area_limit, const uint32_t pixel_per_second_limit)"

.PP
定義在 evdi_lib\&.c 檔案之第 675 行\&.
.SS "void evdi_ddcci_response (\fBevdi_handle\fP handle, const unsigned \fBchar\fP * buffer, const uint32_t buffer_length, const bool result)"

.PP
定義在 evdi_lib\&.c 檔案之第 804 行\&.
.SS "void evdi_disconnect (\fBevdi_handle\fP handle)"

.PP
定義在 evdi_lib\&.c 檔案之第 693 行\&.
.SS "void evdi_enable_cursor_events (\fBevdi_handle\fP handle, bool enable)"

.PP
定義在 evdi_lib\&.c 檔案之第 700 行\&.
.SS "\fBevdi_selectable\fP evdi_get_event_ready (\fBevdi_handle\fP handle)"

.PP
定義在 evdi_lib\&.c 檔案之第 1001 行\&.
.SS "void evdi_get_lib_version (struct \fBevdi_lib_version\fP * version)"

.PP
定義在 evdi_lib\&.c 檔案之第 1006 行\&.
.SS "void evdi_grab_pixels (\fBevdi_handle\fP handle, struct \fBevdi_rect\fP * rects, \fBint\fP * num_rects)"

.PP
定義在 evdi_lib\&.c 檔案之第 713 行\&.
.SS "void evdi_handle_events (\fBevdi_handle\fP handle, struct \fBevdi_event_context\fP * evtctx)"

.PP
定義在 evdi_lib\&.c 檔案之第 980 行\&.
.SS "\fBevdi_handle\fP evdi_open (\fBint\fP device)"

.PP
定義在 evdi_lib\&.c 檔案之第 575 行\&.
.SS "\fBevdi_handle\fP evdi_open_attached_to (const \fBchar\fP * sysfs_parent_device)"

.PP
定義在 evdi_lib\&.c 檔案之第 642 行\&.
.SS "void evdi_register_buffer (\fBevdi_handle\fP handle, struct \fBevdi_buffer\fP buffer)"

.PP
定義在 evdi_lib\&.c 檔案之第 767 行\&.
.SS "bool evdi_request_update (\fBevdi_handle\fP handle, \fBint\fP bufferId)"

.PP
定義在 evdi_lib\&.c 檔案之第 787 行\&.
.SS "void evdi_set_logging (struct \fBevdi_logging\fP \fBevdi_logging\fP \fBevdi_logging\fP)"

.PP
定義在 evdi_lib\&.c 檔案之第 1015 行\&.
.SS "void evdi_unregister_buffer (\fBevdi_handle\fP handle, \fBint\fP bufferId)"

.PP
定義在 evdi_lib\&.c 檔案之第 775 行\&.
.SH "變數說明文件"
.PP 
.SS "struct \fBevdi_logging\fP g_evdi_logging"
\fB初值:\fP
.PP
.nf
= {
    \&.function = NULL,
    \&.user_data = NULL
}
.fi
.PP
定義在 evdi_lib\&.c 檔案之第 1 行\&.
.SH "作者"
.PP 
本文件由Doxygen 自 My Project 的原始碼中自動產生\&.
